---
# tasks file for factorio

- name: Factorio | Install needed software
  ansible.builtin.apt:
    name:
      - tar
      - xz-utils
      - jq
    state: present

- name: Factorio | Create factorio user
  ansible.builtin.user:
    create_home: true
    name: "{{ factorio_username }}"

- name: Factorio | Create factorio main directory
  ansible.builtin.file:
    path: "{{ factorio_main_dir }}"
    state: directory
    owner: "{{ factorio_username }}"
    group: "{{ factorio_username }}"
    mode: "0700"

- name: Factorio | Create factorio saves directory
  ansible.builtin.file:
    path: "{{ factorio_saves_dir }}"
    state: directory
    owner: "{{ factorio_username }}"
    group: "{{ factorio_username }}"
    mode: "0700"

- name: "Factorio | Download factorio headless server v{{ factorio_version }}"
  ansible.builtin.get_url:
    url: "{{ factorio_download_uri }}"
    dest: "{{ factorio_main_dir }}/{{ factorio_download_archive_name }}"
    owner: "factorio"
    group: "factorio"
    mode: "0700"
    checksum: "{{ factorio_download_checksum }}"

- name: "Factorio | Unarchive factorio headless server v{{ factorio_version }}"
  ansible.builtin.unarchive:
    src: "{{ factorio_main_dir }}/{{ factorio_download_archive_name }}"
    dest: "{{ factorio_main_dir }}"
    remote_src: true
    owner: "factorio"
    group: "factorio"
    creates: "{{ factorio_main_dir }}/factorio"
    mode: "0700"
    # TODO: If change a version will not Unarchive need to fix

- name: Factorio | Install factorio server-settings
  ansible.builtin.template:
    src: "templates/server-settings.json.j2"
    dest: "{{ factorio_server_settings_path }}"
    owner: "{{ factorio_username }}"
    group: "{{ factorio_username }}"
    mode: "0700"
    validate: "/usr/bin/jq . %s"
  notify:
    - Restart factorio

- name: Factorio | Check existence of game save
  ansible.builtin.stat:
    path: "{{ factorio_server_game_save_path }}"
  register: game_save

- name: Factorio | Generate defalt save if not have one and don\'t use local one
  become: true
  become_user: "{{ factorio_username }}"
  ansible.builtin.command:
    argv:
      - "{{ factorio_binary_path }}"
      - "--create"
      - "{{ factorio_server_game_save_path }}"
  when:
    - not game_save.stat.exists
    - factorio_local_save_path == ""
  notify:
    - Restart factorio
  changed_when: true

- name: Factorio | Stop factorio systemd service before copying local game save to server
  ansible.builtin.systemd:
    name: "{{ factorio_systemd_service_name }}"
    state: "stopped"
  when:
    - not game_save.stat.exists
    - factorio_local_save_path != ""

- name: Factorio | Copy local game save to server
  ansible.builtin.copy:
    src: "{{ factorio_local_save_path }}"
    dest: "{{ factorio_server_game_save_path }}"
    owner: "{{ factorio_username }}"
    group: "{{ factorio_username }}"
    mode: "0700"
    backup: true
  when:
    - not game_save.stat.exists
    - factorio_local_save_path != ""
  notify:
    - Restart factorio

- name: Factorio | Install factorio systemd service
  ansible.builtin.template:
    src: "templates/factorio.service.j2"
    dest: "/etc/systemd/system/{{ factorio_systemd_service_name }}"
    mode: "0700"
  notify:
    - Restart factorio

- name: Factorio | Run factorio systemd service
  ansible.builtin.systemd:
    name: "{{ factorio_systemd_service_name }}"
    daemon_reload: true
    state: "started"
